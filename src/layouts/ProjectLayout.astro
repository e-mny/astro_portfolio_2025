---
import AppLayout from "@layouts/AppLayout.astro";
import Pagination from "@components/Pagination.astro";
import { Image } from "astro:assets";
import type { ImageMetadata } from "astro";
import { getRelativeTime } from "src/utils";
import TOC from "@components/TOC.astro";
import type { headingObject } from "src/utils";
import TechStackList from "@components/TechStackList.astro";
import Tags from "@components/Tags.astro";

interface Props {
  title: string;
  description: string;
  image: ImageMetadata;
  imageAlt: string;
  pubDate: Date;
  slugUrl?: string;
  repoUrl?: string;
  liveDemo?: string;
  updatedDate: Date | undefined;
  techStack: string[];
  tags: string[];
  minutesRead: string;
  lastModified: string;
  headings: headingObject[];
}

const {
  title,
  description,
  image,
  imageAlt,
  pubDate,
  repoUrl,
  liveDemo,
  updatedDate,
  techStack,
  tags,
  minutesRead,
  headings,
} = Astro.props;

const fullPubDate = pubDate.toLocaleDateString("en", {
  dateStyle: "full",
});

const formattedUpdatedDate = updatedDate ? getRelativeTime(updatedDate) : null;
---

<AppLayout title={title} description={description} pubDate={pubDate}>
  <!-- Project Image (With Skeleton Placeholder) -->
  <div
    class="flex align-middle items-center justify-center rounded-lg overflow-hidden p-4"
  >
    {
      image ? (
        <Image src={image} alt={imageAlt} class="rounded-lg shadow-lg" />
      ) : null
    }
  </div>
  <header class="flex flex-col mb-8">
    <h1
      class={`text-2xl sm:text-4xl pb-6 font-bold text-center text-transparent bg-clip-text bg-gradient-to-r from-[#ffd700] via-[#ffae42] to-[#ff8c00] tracking-wide`}
    >
      {title}
    </h1>
    <p class="text-center text-zinc-600 dark:text-zinc-400 max-w-3xl mx-auto">
      {description}
    </p>
  </header>

  <div class="flex justify-between align-middle mb-4">
    <div
      class="flex flex-col items-start align-middle dark:text-zinc-400 text-zinc-600 text-sm sm:text-base"
    >
      <p class="text-left">{minutesRead}</p>
      <time datetime={pubDate.toISOString()} class="text-left">
        {fullPubDate}
      </time>
    </div>
    <div>
      <TechStackList techStackList={techStack} />
    </div>
  </div>

  <div class="flex flex-col md:flex-row items-center justify-center gap-8 mb-8">
    <!-- Tech Stack & Links -->
    <div class="flex flex-col items-start space-y-4 w-full md:w-1/2">
      <div class="flex flex-wrap gap-3">
        {
          repoUrl && (
            <a
              href={repoUrl}
              target="_blank"
              rel="noopener noreferrer"
              class="px-4 py-2 bg-zinc-800 text-white rounded-lg hover:bg-zinc-700 transition"
            >
              View Code
            </a>
          )
        }
        {
          liveDemo && (
            <a
              href={liveDemo}
              target="_blank"
              rel="noopener noreferrer"
              class="px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-400 transition"
            >
              Live Demo
            </a>
          )
        }
      </div>
    </div>
  </div>

  <article
    class="w-full prose dark:prose-invert lg:prose-lg dark:prose-code:text-zinc-300 dark:prose-a:text-blue-400 prose-a:text-blue-600 max-w-none hover:prose-a:underline focus:prose-a:underline prose-a:no-underline dark:prose-headings:text-beige prose-img:rounded-lg"
  >
    <slot />
  </article>
  <TOC headings={headings} />
  <Pagination mode="projects" />

  <div class="mt-8 text-sm text-zinc-500">
    <p class="text-left">
      Last Updated: <span class="font-semibold text-zinc-700 dark:text-zinc-300"
        >{formattedUpdatedDate}</span
      >
    </p>
  </div>

  <Tags tags={tags} />
</AppLayout>
