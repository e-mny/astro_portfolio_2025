---
import { getCollection } from "astro:content";

const { mode } = Astro.props;


const posts: Array<{ slug: string; data: { pubDate: string; title: string } }> = await getCollection(mode)

posts.sort((a, b) => new Date(a.data.pubDate).getTime() - new Date(b.data.pubDate).getTime(),
);

const index = posts.findIndex((post) => {
  return Astro.url.pathname.includes(post.slug);
});

const nextPost = posts[index + 1];
const prevPost = posts[index - 1];

---

<aside class="flex flex-col sm:flex-row mt-10 gap-4 w-full">
  {
    prevPost && (
      <a
        href={`/${mode}/${prevPost.slug}/`}
        class="group flex-1 flex flex-col grow text-sm p-4 rounded-lg border border-zinc-300 dark:border-zinc-700 dark:hover:border-blue-400 hover:border-blue-300 transition-all dark:hover:bg-blue-600/20 hover:bg-blue-100"
      >
        <p class="dark:text-zinc-400 text-zinc-600 mb-1 group-hover:dark:text-zinc-300 group-hover:text-zinc-700">
          &larr; Previous post
        </p>
        <p class="font-semibold dark:text-zinc-300 text-zinc-700 group-hover:dark:text-blue-400 group-hover:text-blue-800">
          {prevPost.data.title}
        </p>
      </a>
    )
  }
  {
    nextPost && (
      <a
        href={`/${mode}/${nextPost.slug}/`}
        class="group flex-1 flex flex-col text-right grow text-sm p-4 rounded-lg border border-zinc-300 dark:border-zinc-700 dark:hover:border-blue-400 hover:border-blue-300 transition-all dark:hover:bg-blue-600/20 hover:bg-blue-100"
      >
        <p class="dark:text-zinc-400 text-zinc-600 mb-1 group-hover:dark:text-zinc-300 group-hover:text-zinc-700">
          Next post &rarr;
        </p>
        <p class="font-semibold dark:text-zinc-300 text-zinc-700 group-hover:dark:text-blue-400 group-hover:text-blue-800">
          {nextPost.data.title}
        </p>
      </a>
    )
  }
</aside>
