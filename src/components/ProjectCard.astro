---
import Badge from "@components/Badge.astro";
import { Icon } from "astro-icon";

interface Props {
  name: string;
  role: "author" | "contributor" | "maintainer";
  url: string;
  description: string | null;
  stars: number;
  languages: string[];
  website?: string | null;
  addClass?: string | null;
}

const colors = {
  maintainer: "gradient-pink",
  author: "gradient-indigo",
  contributor: "green",
} as const;

const { name, role, url, description, stars, languages, website, addClass } =
  Astro.props;
---

<li
  class=`dark:text-zinc-400 text-zinc-500 gap-1 p-6 border dark:border-zinc-700/60 rounded-lg flex flex-col bg-opacity-40 dark:bg-opacity-40 bg-zinc-50 dark:bg-zinc-800 ${addClass}`
>
  <div class="flex justify-between">
    <div class="flex flex-col sm:flex-row sm:items-baseline gap-2">
      <h2
        class="text-lg font-medium dark:text-white text-zinc-700 [word-break:break-word]"
      >
        {name}
      </h2>
      <Badge text={role} color={colors[role]} />
    </div>
    <div class="flex gap-2">
      <a
        href={url}
        target="_blank"
        rel="noopener noreferrer"
        aria-label={`Open ${name} repository in a new tab`}
      >
        <Icon
          name="mdi:github"
          class="w-6 fill-current dark:hover:text-zinc-300 hover:text-zinc-600 hover:scale-110 transition-all"
        />
      </a>
      {
        website && (
          <a
            href={website}
            target="_blank"
            rel="noopener noreferrer"
            aria-label={`Open ${name} website in a new tab`}
          >
            <Icon
              name="mdi:web"
              class="w-6 fill-current dark:hover:text-zinc-300 hover:text-zinc-600 hover:scale-110 transition-all"
            />
          </a>
        )
      }
    </div>
  </div>
  <div class="flex gap-2">
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 24 24"
      fill="currentColor"
      class="w-5 text-zinc-400"
    >
      <path
        fill-rule="evenodd"
        d="M10.788 3.21c.448-1.077 1.976-1.077 2.424 0l2.082 5.007 5.404.433c1.164.093 1.636 1.545.749 2.305l-4.117 3.527 1.257 5.273c.271 1.136-.964 2.033-1.96 1.425L12 18.354 7.373 21.18c-.996.608-2.231-.29-1.96-1.425l1.257-5.273-4.117-3.527c-.887-.76-.415-2.212.749-2.305l5.404-.433 2.082-5.006z"
        clip-rule="evenodd"></path>
    </svg>

    <span>{stars}</span>
  </div>
  {description && <p class="leading-relaxed">{description}</p>}
  <ul class="flex flex-wrap gap-2 mt-2">
    {
      languages.map((item) => {
        let bgColor = "";
        switch (item) {
          case "JavaScript":
            bgColor = "bg-yellow-500 dark:bg-yellow-600";
            break;
          case "Python":
            bgColor = "bg-blue-500 dark:bg-blue-600";
            break;
          case "Go":
            bgColor = "bg-green-500 dark:bg-green-600";
            break;
          case "HTML":
            bgColor = "bg-orange-500 dark:bg-orange-600";
            break;
          case "CSS":
            bgColor = "bg-indigo-500 dark:bg-indigo-600";
            break;
          case "TypeScript":
            bgColor = "bg-blue-600 dark:bg-blue-700";
            break;
          case "SQL":
            bgColor = "bg-yellow-400 dark:bg-yellow-500";
            break;
          default:
            bgColor = "bg-gray-200 dark:bg-gray-600"; // Default color for unknown languages
            break;
        }

        return (
          <li
            class={`text-zinc-600 dark:text-zinc-300 rounded-md px-2 py-1 text-sm ${bgColor}`}
          >
            {item}
          </li>
        );
      })
    }
  </ul>
</li>
