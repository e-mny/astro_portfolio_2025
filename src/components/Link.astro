---
import type { HTMLAttributes } from "astro/types";

interface Props extends HTMLAttributes<"a"> {
  text: string;
  addClass?: string;
}
const { text, addClass, href, ...props } = Astro.props;
let isActive: boolean;

const currentPath = (Astro.url?.pathname || "").replace(/\/$/, ""); // Normalize current path
const hrefPath =
  typeof href === "string"
    ? href.replace(/\/$/, "") // Normalize href
    : href?.href?.replace(/\/$/, "");

// Debugging: Check values in production
console.log("Current Path:", currentPath);
console.log("Href Path:", hrefPath);

if (hrefPath === "/" && (currentPath === "/" || currentPath === "")) {
  isActive = true; // Treat both "/" and "" as the homepage
} else {
  isActive = currentPath === hrefPath; // General path comparison
}
---

<a
  class:list={[
    "px-4 py-2 text-base md:text-sm font-medium capitalize transition-all duration-300",
    {
      "dark:text-bluePrimary text-blue-600 border-b-2 border-blue-400 dark:border-blue-600":
        isActive, // Active link styles
    },
    {
      "dark:text-white text-white dark:hover:text-skyblue animated-link":
        !isActive, // Default styles
    },
    addClass,
  ]}
  aria-current={isActive ? "page" : undefined}
  href={href}
  {...props}
  aria-label={`Go to ${text} page`}
>
  {text}
</a>
